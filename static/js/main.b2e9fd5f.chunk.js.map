{"version":3,"sources":["back.png","components/menu.js","components/playerHand.js","components/playerLose.js","components/playerWin.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","Menu","startGame","playerNum","setPlayerNum","isError","className","type","min","max","step","value","onChange","event","parseInt","target","onClick","DrawButton","draw","isDisabled","disabled","src","backImage","alt","PlayerHand","player","drawCards","nextPlayer","gameStatus","id","bot","draws","cards","length","map","e","key","code","image","suit","points","PlayerLose","currPlayerId","EndGame","winner","resetGame","join","initialPlayerState","lost","App","useState","players","setPlayers","setGameStatus","deckId","setDeckId","currPlayer","setCurrPlayer","setWinner","setError","fetch","then","response","json","data","deck_id","catch","error","console","newPlayers","i","push","useCallback","num","currDraw","currPoints","obj","newObj","changeValue","reduce","total","curr","updatePlayer","updatePlayers","arr","arrTemp","objIdx","findIndex","playerMaxPoints","filter","sort","a","b","find","updateGame","currPlayerIdx","useEffect","myVar","setTimeout","clearTimeout","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","message"],"mappings":"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","file":"static/js/main.b2e9fd5f.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/back.8c15b137.png\";","import React from \"react\";\nimport \"../App.css\";\n\nconst Menu = ({ startGame, playerNum, setPlayerNum, isError }) => {\n  return (\n    <section className=\"menu\">\n      <h1>Oko Card Game</h1>\n      {isError ? (\n        <p className=\"menu__errorMessage\">\n          Error with fetching data. <br /> Try again later.\n        </p>\n      ) : null}\n      <label>Number of players: {playerNum}</label>\n      <input\n        type=\"range\"\n        min={1}\n        max={4}\n        step={1}\n        value={playerNum}\n        onChange={(event) => setPlayerNum(parseInt(event.target.value))}\n      />\n      <button className={\"actionButton\"} onClick={startGame}>\n        Start game\n      </button>\n    </section>\n  );\n};\n\nexport default Menu;\n","import React from \"react\";\nimport backImage from \"../back.png\";\n\nconst DrawButton = ({ draw, isDisabled }) => {\n  return (\n    <figure>\n      <button\n        className=\"playerHand__drawCard\"\n        onClick={draw}\n        disabled={isDisabled}\n      >\n        <img src={backImage} alt=\"Card's back\" />\n      </button>\n    </figure>\n  );\n};\n\nconst PlayerHand = ({ player, drawCards, nextPlayer, gameStatus }) => {\n  return (\n    <section className=\"playerHand\">\n      <h1>\n        Player {player.id} {player.bot ? \"(Bot)\" : null}\n      </h1>\n      {player.draws === 0 ? (\n        <DrawButton draw={() => drawCards(2)} />\n      ) : (\n        <DrawButton\n          draw={() => drawCards(1)}\n          isDisabled={\n            gameStatus === \"lose\" || gameStatus === \"win\" || player.bot\n          }\n        />\n      )}\n\n      <section className=\"playerHand__cardListContainer\">\n        {player.cards.length === 0 ? null : (\n          <ul className=\"playerHand__cardList\">\n            {player.cards.map((e) => {\n              return (\n                <li key={e.code}>\n                  <img src={e.image} alt={`${e.suit} ${e.value}`} />\n                </li>\n              );\n            })}\n          </ul>\n        )}\n      </section>\n      <nav>\n        <section className=\"playerHand__playerStats\">\n          <p>Points: {player.points}</p>\n          <p>Draws: {player.draws}</p>\n        </section>\n        <button\n          className={\"actionButton\"}\n          onClick={nextPlayer}\n          disabled={\n            gameStatus === \"lose\" ||\n            gameStatus === \"win\" ||\n            player.draws === 0 ||\n            player.bot\n          }\n        >\n          Fold\n        </button>\n      </nav>\n    </section>\n  );\n};\n\nexport default PlayerHand;\n","import React from \"react\";\n\nconst PlayerLose = ({\n  currPlayerId,\n  nextPlayer\n}) => {\n  return (\n    <section className=\"menu menu--end\">\n      <h1>Lose</h1>\n      <h3>Player {currPlayerId} Lost</h3>\n      <nav>\n        <button className={\"actionButton\"} onClick={nextPlayer}>\n          Next\n        </button>\n      </nav>\n    </section>\n  );\n};\n\nexport default PlayerLose;\n","import React from \"react\";\n\nconst EndGame = ({ winner, startGame, resetGame }) => {\n  return (\n    <section className=\"menu menu--end\">\n      <h1>Game Over</h1>\n      {winner[0] === 0 ? (\n        <h3>Bot Player Won</h3>\n      ) : winner.length > 1 ? (\n        <h3>Players {winner.join(\", \")} Tied</h3>\n      ) : (\n        <h3>Player {winner[0]} Won</h3>\n      )}\n      <nav>\n        <button className={\"actionButton\"} onClick={startGame}>\n          New Game\n        </button>\n        <button className={\"actionButton\"} onClick={resetGame}>\n          Main Menu\n        </button>\n      </nav>\n    </section>\n  );\n};\n\nexport default EndGame;\n","import React, { useState, useEffect, useCallback } from \"react\";\nimport Menu from \"./components/menu\";\nimport PlayerHand from \"./components/playerHand\";\nimport PlayerLose from \"./components/playerLose\";\nimport PlayerWin from \"./components/playerWin\";\nimport \"./App.css\";\n\nconst initialPlayerState = {\n  id: 1,\n  cards: [],\n  points: 0,\n  draws: 0,\n  lost: false,\n  bot: false,\n};\n\nexport const changeValue = (obj) => {\n  let newObj = {};\n\n  switch (obj.value) {\n    case \"JACK\":\n      newObj = { ...obj, value: 2 };\n      break;\n    case \"QUEEN\":\n      newObj = { ...obj, value: 3 };\n      break;\n    case \"KING\":\n      newObj = { ...obj, value: 4 };\n      break;\n    case \"ACE\":\n      newObj = { ...obj, value: 11 };\n      break;\n    default:\n      newObj = obj;\n  }\n\n  return newObj;\n};\n\nfunction App() {\n  const [players, setPlayers] = useState([]);\n  const [playerNum, setPlayerNum] = useState(1);\n  const [gameStatus, setGameStatus] = useState(\"initial\");\n  const [deckId, setDeckId] = useState(\"\");\n  const [currPlayer, setCurrPlayer] = useState({ ...initialPlayerState });\n  const [winner, setWinner] = useState([0]); // winner is an array because players can tie\n  const [isError, setError] = useState(false);\n\n  const startGame = () => {\n    fetch(\"https://deckofcardsapi.com/api/deck/new/shuffle/?deck_count=1\")\n      .then((response) => response.json())\n      .then((data) => {\n        setError(false);\n        setDeckId(data.deck_id);\n      })\n      .catch((error) => {\n        console.error(\"Error:\", error);\n        setError(true);\n        setGameStatus(\"initial\");\n      });\n\n    const newPlayers = [];\n    for (let i = 1; i < playerNum + 1; i++) {\n      newPlayers.push({ ...initialPlayerState, id: i });\n    }\n\n    if (newPlayers.length === 1) {\n      newPlayers.push({ ...initialPlayerState, id: 2, bot: true });\n    }\n\n    setPlayers([...newPlayers]);\n    setCurrPlayer({ ...initialPlayerState });\n    setWinner([0]);\n    setGameStatus(\"pending\");\n  };\n\n  const resetGame = () => {\n    setPlayers([]);\n    setPlayerNum(1);\n    setGameStatus(\"initial\");\n    setDeckId(\"\");\n    setCurrPlayer({ ...initialPlayerState });\n    setWinner([0]);\n  };\n\n  const drawCards = useCallback(\n    (player, num) => {\n      fetch(`https://deckofcardsapi.com/api/deck/${deckId}/draw/?count=${num}`)\n        .then((response) => response.json())\n        .then((data) => {\n          const currDraw = data.cards;\n          const currPoints = currDraw\n            .map((e) => changeValue(e))\n            .map((e) => parseInt(e.value))\n            .reduce((total, curr) => {\n              return (total += curr);\n            }, 0);\n\n          updatePlayer(player, currDraw, currPoints);\n        })\n        .catch((error) => {\n          console.error(\"Error:\", error);\n          setError(true);\n          resetGame();\n        });\n    },\n    [deckId]\n  );\n\n  const updatePlayer = (player, draw, points) => {\n    setCurrPlayer({\n      ...player,\n      cards: [...player.cards, ...draw],\n      points: player.points + parseInt(points),\n      draws: player.draws + 1,\n    });\n  };\n\n  const updatePlayers = useCallback((arr, obj) => {\n    const arrTemp = [...arr];\n    const objIdx = arrTemp.findIndex((e) => e.id === obj.id);\n\n    arrTemp[objIdx] = { ...obj };\n\n    setPlayers([...arrTemp]);\n  }, []);\n\n  const nextPlayer = useCallback(() => {\n    if (winner[0] === 0 && currPlayer.id === players.length) {\n      setGameStatus(\"win\");\n      const playerMaxPoints = players\n        .filter((e) => e.lost === false)\n        .sort((a, b) => b.points - a.points)[0];\n      setWinner(\n        players\n          .filter((e) => e.points === playerMaxPoints.points)\n          .map((e) => e.id)\n      );\n    } else if (players.filter((e) => e.lost === false).length === 1) {\n      setGameStatus(\"win\");\n      setWinner([players.find((e) => e.lost === false).id]);\n    } else {\n      setGameStatus(\"pending\");\n      setCurrPlayer(\n        players[players.findIndex((e) => e.id === currPlayer.id) + 1]\n      );\n    }\n  }, [players, currPlayer.id, winner]);\n\n  const updateGame = useCallback(() => {\n    if (players.length > 0) {\n      if (\n        (currPlayer.id !== winner[0] && currPlayer.points === 21) ||\n        (currPlayer.id !== winner[0] &&\n          currPlayer.points === 22 &&\n          currPlayer.draws === 1)\n      ) {\n        setGameStatus(\"win\");\n        setWinner([currPlayer.id]);\n      }\n\n      if (!currPlayer.lost && currPlayer.points > 21 && currPlayer.draws > 1) {\n        setGameStatus(\"lose\");\n        setCurrPlayer({ ...currPlayer, lost: true });\n      }\n\n      const currPlayerIdx = players.findIndex((e) => e.id === currPlayer.id);\n\n      if (\n        currPlayer.points !== players[currPlayerIdx].points ||\n        currPlayer.lost !== players[currPlayerIdx].lost\n      ) {\n        updatePlayers(players, currPlayer);\n      }\n    }\n  }, [players, currPlayer, updatePlayers, winner]);\n\n  useEffect(() => {\n    updateGame();\n\n    // bot logic\n    if (players.length > 0) {\n      if (currPlayer.bot === true) {\n        if (currPlayer.draws === 0) {\n          drawCards(currPlayer, 2);\n        }\n        if (\n          currPlayer.points !== 22 &&\n          currPlayer.points !== 21 &&\n          currPlayer.points < 20\n        ) {\n          const myVar = setTimeout(() => drawCards(currPlayer, 1), 1500);\n          return () => clearTimeout(myVar);\n        }\n\n        if (winner[0] === 0 && currPlayer.points === 20) {\n          nextPlayer();\n        }\n      }\n    }\n  }, [updateGame, players, currPlayer, drawCards, winner, nextPlayer]);\n\n  return (\n    <main className=\"app\">\n      {gameStatus === \"initial\" ? (\n        <Menu\n          startGame={startGame}\n          playerNum={playerNum}\n          setPlayerNum={setPlayerNum}\n          isError={isError}\n        />\n      ) : (\n        <>\n          <PlayerHand\n            player={currPlayer}\n            drawCards={(num) => drawCards(currPlayer, num)}\n            nextPlayer={nextPlayer}\n            gameStatus={gameStatus}\n          />\n          {gameStatus === \"win\" ? (\n            <PlayerWin\n              winner={winner}\n              startGame={startGame}\n              resetGame={resetGame}\n            />\n          ) : null}\n          {gameStatus === \"lose\" ? (\n            <PlayerLose\n              currPlayerId={currPlayer.id}\n              nextPlayer={nextPlayer}\n              playerNum={playerNum}\n              startGame={startGame}\n              resetGame={resetGame}\n            />\n          ) : null}\n        </>\n      )}\n    </main>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}